/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&left_encoder { resolution = <2>; };
&left_encoder_2 { resolution = <2>; };
&right_encoder { resolution = <2>; };
&right_encoder_2 { resolution = <2>; };

/*
/ {
	combos {
        compatible = "zmk,combos";
        combo_LPAR {
            timeout-ms = <10>;
            key-positions = <19 20>;
            bindings = <&kp LPAR>;
        };
		combo_RPAR {
            timeout-ms = <10>;
            key-positions = <20 21>;
            bindings = <&kp RPAR>;
        };
		combo_LBKT {
            timeout-ms = <10>;
            key-positions = <31 32>;
            bindings = <&kp LBKT>;
        };
		combo_RBKT {
            timeout-ms = <10>;
            key-positions = <32 33>;
            bindings = <&kp RBKT>;
        };
		combo_LBRC {
            timeout-ms = <10>;
            key-positions = <45 46>;
            bindings = <&kp LBRC>;
        };
		combo_RBRC {
            timeout-ms = <10>;
            key-positions = <46 47>;
            bindings = <&kp RBRC>;
        };
		
	};
};
*/


/ {
    macros {
        shift_ins: shift_ins {
            label = "ZM_shift_ins";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp INS>
                , <&macro_release &kp LSHFT>
                ;
        };

        ctrl_z: ctrl_z {
            label = "ZM_ctrl_z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_y: ctrl_y {
            label = "ZM_ctrl_y";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp Y>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_x: ctrl_x {
            label = "ZM_ctrl_x";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp X>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_c: ctrl_c {
            label = "ZM_ctrl_c";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_v: ctrl_v {
            label = "ZM_ctrl_v";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_r: ctrl_r {
            label = "ZM_ctrl_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp R>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_a: ctrl_a {
            label = "ZM_ctrl_a";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp A>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_s: ctrl_s {
            label = "ZM_ctrl_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp S>
                , <&macro_release &kp LCTRL>
                ;
        };


        ctrl_back: ctrl_back {
            label = "ZM_ctrl_back";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL> 
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_sh_back: ctrl_sh_back {
            label = "ZM_ctrl_sh_back";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp LCTRL &kp LSHIFT>
                ;
        };

        ctrl_tab: ctrl_tab {
            label = "ZM_ctrl_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL> 
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LCTRL>
                ;
        };

        ctrl_sh_tab: ctrl_sh_tab {
            label = "ZM_ctrl_sh_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LSHIFT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LCTRL &kp LSHIFT>
                ;
        };

        alt_ctrl_del: alt_ctrl_del {
            label = "ZM_alt_ctrl_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL &kp LALT>
                , <&macro_tap &kp DEL>
                , <&macro_release &kp LCTRL &kp LALT>
                ;
        };

        alt_f4: alt_f4 {
            label = "ZM_alt_f4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp F4>
                , <&macro_release &kp LALT>
                ;
        };

        alt_left: alt_left {
            label = "ZM_alt_left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LALT>
                ;
        };

        alt_right: alt_right {
            label = "ZM_alt_right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LALT>
                ;
        };

        

        alt_enter: alt_enter {
            label = "ZM_alt_enter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp ENTER>
                , <&macro_release &kp LALT>
                ;
        };

        alt_tab: alt_tab {
            label = "ZM_alt_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp TAB>
                , <&macro_release &kp LALT>
                ;
        };

        alt_cap: alt_cap {
            label = "ZM_alt_cap";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp PSCRN>
                , <&macro_release &kp LALT>
                ;
        };

        alt_w_n: alt_w_n {
            label = "ZM_alt_w_n";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp W &kp N>
                , <&macro_release &kp LALT>
                ;
        };

        shift_g: shift_g {
            label = "ZM_shift_g";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp G>
                , <&macro_release &kp LCTRL>
                ;
        };

        c_v_hom_del: c_v_hom_del {
            label = "ZM_c_v_hom_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp HOME &kp RIGHT &kp BSPC>
                ;
        };

        c_v_hom_bs: c_v_hom_bs {
            label = "ZM_c_v_hom_bs";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCTRL>
                , <&macro_tap &kp HOME &kp RIGHT &kp RIGHT &kp RIGHT>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp END>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp BSPC>
                ;
        };
       
    };

};

    

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        se: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            #binding-cells = <2>;
            tapping-term-ms = <80>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        al: alt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        rot_lkp: rot_lkp {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_LKP";
            #sensor-binding-cells = <0>;
            bindings = <&ctrl_z>, <&ctrl_y>;
        };

        rot_lkp_b: rot_lkp_b {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_LKP_BACK";
            #sensor-binding-cells = <0>;
            bindings = <&alt_right>, <&alt_left>;
        };

        rot_lkp_t: rot_lkp_t {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_LKP_TAB";
            #sensor-binding-cells = <0>;
            bindings = <&ctrl_tab>, <&ctrl_sh_tab>;
        };

        rot_rkp: rot_rkp {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENC_RKP";
            #sensor-binding-cells = <2>;
            bindings = <&mwh>, <&mwh>;
        };


        rot_mmv: rot_mmv {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENC_RMV";
            #sensor-binding-cells = <2>;
            bindings = <&mmv>, <&mmv>;
        };
        
    };
};




/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   =   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | LOWER| DEL  |  ENTER |  | SPACE | BSPC | UPPER | ALT   |
			bindings = <
&hm ESC GRAVE  &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                 &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &hm HOME MINUS
&kp TAB        &kp Q  &kp W  &kp E    &kp R    &kp T                       &kp Y  &kp U    &kp I     &kp O   &kp P    &hm END EQUAL
&kp LCTRL      &kp A  &kp S  &kp D    &kp F    &kp G &kp LBKT    &kp RBKT  &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C    &kp V    &kp B &kp N1      &kp B     &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp LSHFT

						 &kp LALT  &mo 1 &kp DEL  &kp RET  &kp SPACE &kp BSPC &al 2 RALT &hm LGUI RCTRL 
			>;
            //sensor-bindings = <&inc_dec_kp N1 N2 &inc_dec_kp N3 N4 &inc_dec_kp N5 N6 &inc_dec_kp N7 N8>;
			sensor-bindings = <&rot_lkp_t &rot_lkp_b &inc_dec_kp RIGHT LEFT &inc_dec_kp PG_DN PG_UP>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1  | BT2  |  BT3 | Alt+F4|  F5   |                   |  F6  |   F7  |   F8  |   F9  |  F10  |  F11  |
// |Alt+Tab|  F2  |  F3  |  F4  | Ctr_R | M_USB |                   |SCR_UP|L_CLICK|  UP   |R_CLICK|  F11  |  F12  |
// |   `   | Ctr+A| Ctr+S| C_BS | C_Del |Shift_G|                   |SCR_DN|  LEFT |  DOWN |  RIGHT|   )   |   ~   |
// | SHIFT | Ctr+Z| Ctr+X| Ctr+C| Ctr+V | M_BT  | SH+INS |  |ALT_CAP|EX_OFF| EX_ON | ALT_L | ALT_R |   \   | SHIFT |
//                | LGUI | ALT  |       |A_C_Del| Al+Ent |  |       |      |       |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &alt_f4      &kp F5                                &kp F6   &kp F7   &kp F8 &kp F9 &kp F10 &kp F11
&alt_tab   &kp F2        &alt_w_n     &kp F4       &ctrl_r      &out OUT_USB                           &mwh SCROLL_UP    &mkp LCLK        &mmv MOVE_UP  &mkp RCLK   &kp F11   &kp F12
&trans     &ctrl_a       &ctrl_s      &c_v_hom_bs  &c_v_hom_del &shift_g      &shift_ins   &alt_cap   &mwh SCROLL_DOWN  &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT  &kp RPAR  &kp TILDE
&trans     &ctrl_z       &ctrl_x      &ctrl_c      &ctrl_v      &out OUT_BLE  &trans       &trans     &ext_power EP_OFF &ext_power EP_ON &alt_left     &alt_right  &kp BSLH  &kp LSHFT
                                      &trans       &trans       &alt_ctrl_del &alt_enter   &trans     &trans            &trans           &kp C_MUTE    
			>;

			sensor-bindings = <&rot_lkp &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp 5 6>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  F1 | F2  |  F3  |  F4  |  F5  |                   |  F6  |   F7  |   F8  |   F9  |   F10 |   F11 |
// |  TAB  |  1  |  2  |  3   |  4   |  5   |                   | PG_UP|  Home |   ^   |   End |   0   |   F12 |
// |  CTRL |  F2 |  F3 |  F4  |  F5  |  F6  |                   | PG_DN|   <-  |   v   |   ->  |  ->   |       |
// | SHIFT |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   | ALT_L | ALT_R |   \   | SHIFT |
//                     | ALT  | DEL  | ENTER| 		 |  | 		| SPACE| BSPC  | ALT   |
			bindings = <
&trans      &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6   &kp F7   &kp F8 &kp F9 &kp F10 &kp F11
&trans      &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                      &kp PG_UP  &kp HOME  &kp UP    &kp END   &kp N0    &kp F12
&kp LCTRL   &kp F2 &kp F3 &kp F4  &kp F5  &kp F6  &trans  &kp PSCRN   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT &kp RIGHT &trans
&kp LSHFT   &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &trans  &kp C_MUTE  &kp KP_PLUS &kp MINUS &alt_left &alt_right  &kp BSLH  &kp LSHFT
                          &trans  &trans  &trans  &trans  &trans      &trans  &trans &trans
			>;

			sensor-bindings = <&rot_lkp_t &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp 5 6>;
		};
	};
};
